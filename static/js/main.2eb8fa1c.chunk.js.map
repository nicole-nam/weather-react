{"version":3,"sources":["App.js","index.js"],"names":["api","App","useState","query","setQuery","weather","setWeather","year","Date","getFullYear","month","getMonth","day","getDate","className","main","temp","type","placeholder","onChange","e","target","value","onKeyPress","key","fetch","then","res","json","result","console","log","cod","alert","name","sys","country","Math","round","description","src","icon","ReactDOM","render","document","getElementById"],"mappings":"4KAEMA,EACC,mCADDA,EAEE,0CA4EOC,MAzEf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEiBF,mBAAS,IAF1B,mBAENG,EAFM,KAEGC,EAFH,KAmBPC,GAAO,IAAIC,MAAOC,cAClBC,GAAQ,IAAIF,MAAOG,WAAa,EAChCC,GAAM,IAAIJ,MAAOK,UAEvB,OACE,qBACEC,UACyB,oBAAhBT,EAAQU,MACXV,EAAQU,KAAKC,KAAO,GAClB,WAEF,MANR,SASE,iCACE,sBAAKF,UAAU,aAAf,UACE,kDACA,uBACEG,KAAK,OACLH,UAAU,aACVI,YAAY,YACZC,SAAU,SAACC,GAAD,OAAOhB,EAASgB,EAAEC,OAAOC,QACnCA,MAAOnB,EACPoB,WAtCK,SAAUH,GACT,UAAVA,EAAEI,KACJC,MAAM,GAAD,OAAIzB,EAAJ,sBAA0BG,EAA1B,gCAAuDH,IACzD0B,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLvB,EAAWuB,GACXzB,EAAS,IACT0B,QAAQC,IAAIF,GACO,QAAfA,EAAOG,KACTC,MAAM,4CAgCc,oBAAhB5B,EAAQU,KACd,gCACE,sBAAKD,UAAU,eAAf,UACE,sBAAKA,UAAU,OAAf,UACGJ,EADH,IACWE,EADX,KACkBL,KAElB,sBAAKO,UAAU,WAAf,UACGT,EAAQ6B,KADX,IACkB7B,EAAQ8B,IAAIC,cAIhC,sBAAKtB,UAAU,cAAf,UACE,sBAAKA,UAAU,OAAf,UAAuBuB,KAAKC,MAAMjC,EAAQU,KAAKC,MAA/C,WACA,qBAAKF,UAAU,UAAf,SAA0BT,EAAQA,QAAQ,GAAGkC,cAC7C,qBACEzB,UAAU,OACV0B,IAAG,2CAAsCnC,EAAQA,QAAQ,GAAGoC,KAAzD,mBAKT,SCpEVC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.2eb8fa1c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst api = {\n  key: \"c07363721c7bd818ad23afe9f628432d\",\n  base: \"https://api.openweathermap.org/data/2.5\",\n};\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState({});\n\n  const search = function (e) {\n    if (e.key === \"Enter\") {\n      fetch(`${api.base}/weather?q=${query}&units=metric&&APPID=${api.key}`)\n        .then((res) => res.json())\n        .then((result) => {\n          setWeather(result);\n          setQuery(\"\");\n          console.log(result);\n          if (result.cod === \"404\") {\n            alert(\"Please enter a proper city name\");\n          }\n        });\n    }\n  };\n\n  const year = new Date().getFullYear();\n  const month = new Date().getMonth() + 1;\n  const day = new Date().getDate();\n\n  return (\n    <div\n      className={\n        typeof weather.main != \"undefined\"\n          ? weather.main.temp > 16\n            ? \"app warm\"\n            : \"app\"\n          : \"app\"\n      }\n    >\n      <main>\n        <div className=\"search-box\">\n          <h1>city weather app</h1>\n          <input\n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Search...\"\n            onChange={(e) => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search}\n          ></input>\n        </div>\n        {typeof weather.main != \"undefined\" ? (\n          <div>\n            <div className=\"location-box\">\n              <div className=\"date\">\n                {month}.{day}. {year}\n              </div>\n              <div className=\"location\">\n                {weather.name},{weather.sys.country}\n              </div>\n            </div>\n\n            <div className=\"weather-box\">\n              <div className=\"temp\">{Math.round(weather.main.temp)}Â°C</div>\n              <div className=\"weather\">{weather.weather[0].description}</div>\n              <img\n                className=\"icon\"\n                src={`http://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\n              ></img>\n            </div>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}